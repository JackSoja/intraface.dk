<?xml version="1.0" ?>
<project name="intraface" default="build" basedir=".">
    <property name="source.dir" value="./src/" />
    <property name="tests.dir" value="./tests/unit/" />
    <property name="build.dir" value="../build" />
    <property name="reports.dir" value="../build/logs" />
    <property name="reports.phpunit.dir" value="../../../build/logs" />
    <property name="reports.coverage.dir" value="../../../build/coverage" />
    <property name="api.dir" value="../build/api" />

    <target name="prepare">
        <delete dir="${build.dir}" /> 
    </target>

    <target name="build" depends="prepare,checkout,test,php-codesniffer,php-documentor,pear-create">
    </target>

    <target name="checkout">
        <exec dir="${source.dir}" command="svn export ${source.dir} ${build.dir}" />
    	<mkdir dir="${reports.dir}" />
    </target>

	<target name="test" depends="phpunit,merge"></target>

    <target name="phpunit">
        <exec dir="${tests.dir}" command="phpunit
           --log-junit ${reports.phpunit.dir}/unit.xml
           --coverage-html ${reports.coverage.dir}/
           ." passthru="true" checkreturn="false" />
    </target>

    <target name="selenium">
        <exec dir="${tests.dir}" command="phpunit
           --log-xml ${reports.phpunit.dir}/selenium.xml
           SeleniumTests" passthru="true" checkreturn="false" />
    </target>

	<target name="merge">
		   <exec dir="${build.dir}" command="phpuc merge-phpunit
	                 -b unit,selenium
	                 -i logs/unit.xml,logs/selenium.xml
	                 -o logs/phpunit.xml"/>
		   <delete file="${build.dir}/logs/unit.xml" />
		   <delete file="${build.dir}/logs/selenium.xml" />
	</target>

    <target name="php-codesniffer">
        <exec output="${reports.dir}/checkstyle.xml" dir="${source.dir}/Intraface/" error="${reports.dir}/phpcserror.log"
            command="phpcs --report=checkstyle . --standard=PEAR" />
    </target>

    <target name="php-documentor">
        <exec dir="${source.dir}" command="phpdoc -ue on -t ${api.dir} -d ${source.dir}/Intraface" />
    </target>

    <target name="pear">
        <exec dir="${build.dir}" command="php generate_package_xml.php make" />
    </target>

    <target name="pear-create" depends="pear">
        <exec dir="${build.dir}" command="pear package package.xml" />
    </target>

    <target name="create-pear-package" depends="prepare,checkout,pear-create">
    </target>

    <target name="deploy">
        <property file="./build.properties" />
    </target>

</project>